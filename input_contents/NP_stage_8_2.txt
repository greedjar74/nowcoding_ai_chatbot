<명령어 설명>
erase(x, y): n by n 크기의 행렬 x행, y열 위치의 값에서 1을 감소시킨다.



<명령어 설명>이 구체적인 경우  ‘명령어를 이해했습니다.’, 구체적이지 않은 경우 ‘명령어를 이해할 수 없습니다.’ 문구 출력
명령어는 정의되어 있으므로 따로 정의할 필요 없다.

---------------------------------------------------------------------------------------------------

<문제 설명>
0이상의 값이 저장된 배열이 주어질 때 모든 값을 0으로 만드는 파이썬 코드를 만든다. 
x, y 위치의 값을 감소시키기 위해서는 정해진 명령어만 사용할 수 있다. 



<문제 설명>이 이해된다면  ‘문제 설명을 이해했습니다.’, 이해할 수 없는 경우 ‘문제 설명을 이해할 수 없습니다.’ 문구 출력
명령어는 정의되어 있으므로 따로 정의할 필요 없다. 

---------------------------------------------------------------------------------------------------

<범위설정 설명>
range(start, end, term) : ‘start’부터 ‘end-1’까지 ‘term’ 간격으로 증가한다.

[예시]
for i in range(start, end, term):
    동작코드




<범위설정 설명>이 정확한 경우 '범위설정 설명을 이해했습니다.', 정확하지 않은 경우 '범위설정 설명을 이해하지 못했습니다.' 문구를 출력한다. 
([예시]가 없거나 정확하지 않은 경우 이해할 수 없다.) 
(설명에서 range에 입력한 'end'보다 1 작은 값까지 수행된다는 설명이 정확히 표현되었는지 확인한다.)

---------------------------------------------------------------------------------------------------

<제약조건 설명> 
for문을 코드에 한 번 명시할 때마다 반복문 사용 횟수를 1 증가시킨다. 
erase 명령어를 코드에 한 번 명시할 때마다 커맨드 사용 횟수를 1 증가시킨다. 
단, 반복문에 의한 중복 호출은 무시한다. 



설명이 구체적인 경우 ‘제약조건을 이해했습니다.’, 구체적으로 작성되지 않은 경우 ‘제약조건을 이해할 수 없습니다.’ 문구를 출력한다. 
(‘제약조건을 이해할 수 없습니다.’ 출력시 문제를 풀 수 없다.)

---------------------------------------------------------------------------------------------------

<패턴 설명>

패턴: 배열에서 1의 값을 가지는 위치들을 오름차순 정렬한다. 행, 열 값이 가장 작은 위치를 기준으로 n by n 영역이 모두 1이다.

[예시]
[[1, 1, 1, 1], 
[1, 1, 1, 1], 
[1, 1, 1, 1], 
[1, 1, 1, 1]]



패턴을 이해했다면 ‘패턴을 이해했습니다.’ 이해하지 못했다면 ‘패턴을 이해하지 못했습니다.’ 문구 출력
단, 예시가 없거나 설명에 부합하지 않는 경우 패턴을 이해할 수 없다.